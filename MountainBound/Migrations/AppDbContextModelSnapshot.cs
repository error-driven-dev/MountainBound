// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MountainBound.Models;
using System;

namespace MountainBound.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MountainBound.Areas.TradingPost.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("City");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<long>("Phone");

                    b.Property<string>("State");

                    b.Property<int>("Zipcode");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("MountainBound.Areas.TradingPost.Models.LineItem", b =>
                {
                    b.Property<int>("LineItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ItemProductId");

                    b.Property<int?>("OrderId");

                    b.Property<int?>("Quantity");

                    b.HasKey("LineItemId");

                    b.HasIndex("ItemProductId");

                    b.HasIndex("OrderId");

                    b.ToTable("LineItem");
                });

            modelBuilder.Entity("MountainBound.Areas.TradingPost.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.HasKey("OrderId");

                    b.HasIndex("AddressId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MountainBound.Areas.TradingPost.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int>("Stock");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MountainBound.Areas.Trailhead.Models.NationalPark", b =>
                {
                    b.Property<int>("NationalParkId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("FullName");

                    b.Property<string>("ImageAltText");

                    b.Property<string>("ImageCaption");

                    b.Property<string>("ImageTitle");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Lat");

                    b.Property<string>("Lon");

                    b.Property<string>("State");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("NationalParkId");

                    b.ToTable("NationalParks");
                });

            modelBuilder.Entity("MountainBound.Areas.TradingPost.Models.LineItem", b =>
                {
                    b.HasOne("MountainBound.Areas.TradingPost.Models.Product", "Item")
                        .WithMany()
                        .HasForeignKey("ItemProductId");

                    b.HasOne("MountainBound.Areas.TradingPost.Models.Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("MountainBound.Areas.TradingPost.Models.Order", b =>
                {
                    b.HasOne("MountainBound.Areas.TradingPost.Models.Address", "ShippingInfo")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
